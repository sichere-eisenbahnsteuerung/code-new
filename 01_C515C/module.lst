C51 COMPILER V9.02   MODULE                                                                11/03/2010 13:29:56 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MODULE
OBJECT MODULE PLACED IN module.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\common\module.c BROWSE DEBUG OBJECTEXTEND PRINT(.\module.lst) OBJECT(mo
                    -dule.obj)

line level    source

   1          #include "module.h"
   2          
   3          /*
   4           * vim: set expandtab:
   5           */
   6          
   7          #define MAX_MODULES     10
   8          
   9          struct module   *modules[MAX_MODULES];
  10          int              modules_map[MAX_MODULES];
  11          
  12          /*
  13           * @brief   Initialize module subsystem
  14           *
  15           * @return  > 0 if initialization succeeds, <=0 if initialization fails
  16           */
  17          int init_module_subsystem(void)
  18          {
  19   1          int n;
  20   1      
  21   1          /* Mark all modules as unloaded */
  22   1          for (n = 0; n < MAX_MODULES; n++)
  23   1          {
  24   2              modules_map[n] = 0;
  25   2          }
  26   1      
  27   1          return 0;
  28   1      }
  29          
  30          /*
  31           * @brief   This registers a new module in the module subsystem
  32           *
  33           * @param   mod     The new module to be registered
  34           *
  35           * @return  > 0 if module is successfully register, <= 0 if module is not successfully
  36           *          registed
  37           */
  38          int register_module(struct module *mod)
  39          {
  40   1          int n;
  41   1          int new_module_index = -1;
  42   1          int rc = 0;
  43   1      
  44   1          /* find first free module position in module array */
  45   1          for (n = 0; n < MAX_MODULES; n++)
  46   1          {
  47   2              if (modules_map[n] == 0)
  48   2              {
  49   3                  new_module_index = n;
  50   3                  break;
  51   3              }
  52   2          }
  53   1      
  54   1          /* If we found a index for the new module we append it to the array on that position */
C51 COMPILER V9.02   MODULE                                                                11/03/2010 13:29:56 PAGE 2   

  55   1          if (new_module_index >= 0)
  56   1          {
  57   2              modules[new_module_index] = mod;
  58   2              rc = 1;
  59   2          }
  60   1      
  61   1          return rc;
  62   1      }
  63          
  64          /*
  65           * FIXME
  66           */
  67          int unregister_module(struct module *mod)
  68          {
  69   1          /* FIXME */
  70   1          return 0;
  71   1      }
*** WARNING C280 IN LINE 67 OF SRC\COMMON\MODULE.C: 'mod': unreferenced local variable
  72          
  73          /* 
  74           * @brief   Initialize all registered modules
  75           */
  76          void init_all_modules(void)
  77          {
  78   1          int n;
  79   1      
  80   1          for (n = 0; n < MAX_MODULES; n++)
  81   1          {
  82   2              if (modules_map[n] > 0 && modules_map[n] != NULL)
*** ERROR C202 IN LINE 82 OF SRC\COMMON\MODULE.C: 'NULL': undefined identifier
  83   2              {
  84   3                  modules_map[n]->init();
*** ERROR C199 IN LINE 84 OF SRC\COMMON\MODULE.C: left side of '->' requires struct/union pointer
  85   3              }
  86   2          }
  87   1      }
  88          
  89          /*
  90           * @brief   Release all registered modules
  91           */
  92          void release_all_modules(void)
  93          {
  94   1          int n;
  95   1      
  96   1          for (n = 0; n < MAX_MODULES; n++)
  97   1          {
  98   2              if (modules_map[n] > 0 && modules_map[n] != NULL)
*** ERROR C202 IN LINE 98 OF SRC\COMMON\MODULE.C: 'NULL': undefined identifier
  99   2              {
 100   3                  modules_map[n]->release();
*** ERROR C199 IN LINE 100 OF SRC\COMMON\MODULE.C: left side of '->' requires struct/union pointer
 101   3              }
 102   2          }
 103   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  4 ERROR(S)
