C51 COMPILER V9.02   RINGBUFFER                                                            11/09/2010 14:22:56 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE RINGBUFFER
OBJECT MODULE PLACED IN ringbuffer.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\common\ringbuffer.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\ringbuffer.
                    -lst) OBJECT(ringbuffer.obj)

line level    source

   1          #include "ringbuffer.h"
   2          #include "util.h"
   3          
   4          void ringbuffer_init(ringbuffer_t *buffer) {
   5   1              uint16_t i=0;
   6   1          buffer->read_position = 0;
   7   1              buffer->write_position = 0;
   8   1              buffer->size = 0;
   9   1          for(;i<MAX_CONTENT;i++) {
  10   2              buffer->content[i] = NULL;
  11   2          }
  12   1      }
  13          
  14          bool ringbuffer_read(ringbuffer_t *buffer, uint8_t *value) {
  15   1          enable_interrupts(FALSE);
  16   1              
  17   1              if(buffer->size > 0) {
  18   2              *value = buffer->content[buffer->read_position];
  19   2              buffer->content[buffer->read_position] = NULL;
  20   2              buffer->size--;
  21   2              buffer->read_position++; 
  22   2              buffer->read_position%=MAX_CONTENT; 
  23   2              
  24   2              restore_enable_interrupts();
  25   2              return TRUE;
  26   2              }
  27   1          else {
  28   2              restore_enable_interrupts();
  29   2              return FALSE;
  30   2          }
  31   1      }
  32          
  33          bool ringbuffer_write(ringbuffer_t *buffer, uint8_t value) {
  34   1          enable_interrupts(FALSE);
  35   1      
  36   1          if(buffer->size < MAX_CONTENT-1) { // always leave one NULL terminating byte
  37   2              buffer->content[buffer->write_position] = value;
  38   2              buffer->size++;
  39   2              buffer->write_position++; 
  40   2              buffer->write_position%=MAX_CONTENT; 
  41   2              
  42   2              restore_enable_interrupts();
  43   2              return TRUE;
  44   2              }
  45   1          else {
  46   2              restore_enable_interrupts();
  47   2              return FALSE;
  48   2          }
  49   1      
  50   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    314    ----
C51 COMPILER V9.02   RINGBUFFER                                                            11/09/2010 14:22:56 PAGE 2   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
